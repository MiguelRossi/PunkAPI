apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "miguel.rossi.punkapi"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions.animationsDisabled = true
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    def lifecycleVersion = "2.1.0"
    def glideVersion = '4.9.0'
    def retrofit2Version = '2.6.2'
    def okhttpVersion = '4.2.0'
    def coroutinesVersion = '1.3.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Lifecycle dependencies
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // Android KTX
    implementation 'androidx.core:core-ktx:1.1.0'

    // Data Binding
    kapt "com.android.databinding:compiler:3.1.4"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2Version"
    implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'

    // Testing
    def junitTest = 'androidx.test.ext:junit'
    def junitTestVersion = '1.1.1'
    def truthVersion = '1.0'

    testImplementation 'org.mockito:mockito-inline:3.0.0'
    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    androidTestImplementation "$junitTest:$junitTestVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
//    androidTestImplementation 'androidx.test:rules:1.2.0'
//    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
}
